"""
Django settings for logtest project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm%^b)u%=6aiwash7i)jx9tu7-yrzv854+=or#n3$+-mrlj2f64'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'automated_logging',
    'testmodels',
    'django_admin_generator',
]

MIDDLEWARE = [
    'automated_logging.middleware.AutomatedLoggingMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'logtest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'logtest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'root': {'level': 'INFO', 'handlers': ['console', 'db'],},
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s '
            '%(process)d %(thread)d %(message)s'
        },
        'simple': {'format': '%(levelname)s %(message)s'},
        'syslog': {
            'format': '%(asctime)s %%LOCAL0-%(levelname)-8s-CBRS %(message)s'
            # 'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'db': {
            'level': 'INFO',
            'class': 'automated_logging.handlers.DatabaseHandler',
            'max_age': 'P7DT5H',
        },
    },
    'loggers': {
        'automated_logging': {
            'level': 'INFO',
            'handlers': ['console', 'db'],
            'propagate': False,
        },
        'django': {'level': 'INFO', 'handlers': ['console', 'db'], 'propagate': False,},
    },
}


# TODO: seems like application matching DOES NOT WORK
AUTOMATED_LOGGING = {
    'model': {
        'exclude': {
            'unknown': False,
            'fields': [],
            'applications': [
                'session',
                'automated_logging',
                'admin',
                'basehttp',
                'migrations',
                'contenttypes',
            ],
            'models': [],
        },
        'loglevel': 20,
        'mask': [],
    },
    'unspecified': {
        'exclude': {'unknown': False, 'applications': [], 'files': []},
        'loglevel': 20,
    },
    'modules': ['request', 'model', 'unspecified'],
    'request': {
        'data': {
            'ignore': [],
            'mask': ['password'],
            'query': False,
            'content_types': ['application/json'],
            'enabled': [],
        },
        'exclude': {
            'unknown': False,
            'status': [],
            'methods': [],
            'applications': ['automated*'],
        },
        'loglevel': 20,
    },
}
