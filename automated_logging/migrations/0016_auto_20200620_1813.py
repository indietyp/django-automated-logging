# Generated by Django 3.0.7 on 2020-06-20 18:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields
import uuid

# TODO: proper migrations
class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('automated_logging', '0015_auto_20181229_2323'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelEntry',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.TextField()),
                ('primary_key', models.TextField()),
            ],
            options={
                'verbose_name': 'Model Entry',
                'verbose_name_plural': 'Model Entries',
            },
        ),
        migrations.CreateModel(
            name='ModelEvent',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'snapshot',
                    picklefield.fields.PickledObjectField(editable=False, null=True),
                ),
                ('performance', models.DurationField(null=True)),
                (
                    'model',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='automated_logging.ModelEntry',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'Model Entry Event',
                'verbose_name_plural': 'Model Entry Events',
            },
        ),
        migrations.CreateModel(
            name='ModelField',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Model Field',
                'verbose_name_plural': 'Model Fields',
            },
        ),
        migrations.CreateModel(
            name='ModelMirror',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Model Mirror',
                'verbose_name_plural': 'Model Mirrors',
            },
        ),
        migrations.CreateModel(
            name='ModelRelationshipModification',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'operation',
                    models.SmallIntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-1),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    'event',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='relationships',
                        to='automated_logging.ModelEvent',
                    ),
                ),
                (
                    'field',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='automated_logging.ModelField',
                    ),
                ),
                (
                    'model',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='automated_logging.ModelEntry',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Model Entry Event Relationship Modification',
                'verbose_name_plural': 'Model Entry Event Relationship Modifications',
            },
        ),
        migrations.CreateModel(
            name='ModelValueModification',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'operation',
                    models.SmallIntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-1),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ('previous', models.TextField(null=True)),
                ('current', models.TextField(null=True)),
                (
                    'event',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='modifications',
                        to='automated_logging.ModelEvent',
                    ),
                ),
                (
                    'field',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='automated_logging.ModelField',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Model Entry Event Value Modification',
                'verbose_name_plural': 'Model Entry Event Value Modifications',
            },
        ),
        migrations.CreateModel(
            name='RequestContext',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'content',
                    picklefield.fields.PickledObjectField(editable=False, null=True),
                ),
                ('type', models.CharField(max_length=255)),
            ],
            options={'abstract': False,},
        ),
        migrations.CreateModel(
            name='RequestEvent',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uri', models.TextField()),
                ('status', models.PositiveIntegerField()),
                ('method', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Request Event',
                'verbose_name_plural': 'Request Events',
            },
        ),
        migrations.CreateModel(
            name='UnspecifiedEvent',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
                ('level', models.PositiveIntegerField()),
                ('line', models.PositiveIntegerField()),
                ('file', models.TextField()),
            ],
            options={
                'verbose_name': 'Unspecified Event',
                'verbose_name_plural': 'Unspecified Events5',
            },
        ),
        migrations.RemoveField(model_name='field', name='model',),
        migrations.RemoveField(model_name='model', name='application',),
        migrations.RemoveField(model_name='model', name='information',),
        migrations.RemoveField(model_name='model', name='modification',),
        migrations.RemoveField(model_name='model', name='user',),
        migrations.RemoveField(model_name='modelchangelog', name='information',),
        migrations.RemoveField(model_name='modelchangelog', name='inserted',),
        migrations.RemoveField(model_name='modelchangelog', name='modification',),
        migrations.RemoveField(model_name='modelchangelog', name='removed',),
        migrations.RemoveField(model_name='modelmodification', name='currently',),
        migrations.RemoveField(model_name='modelmodification', name='previously',),
        migrations.RemoveField(model_name='modelobject', name='field',),
        migrations.RemoveField(model_name='modelobject', name='type',),
        migrations.RemoveField(model_name='request', name='application',),
        migrations.RemoveField(model_name='request', name='user',),
        migrations.DeleteModel(name='Unspecified',),
        migrations.AlterModelOptions(
            name='application',
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
            },
        ),
        migrations.DeleteModel(name='Field',),
        migrations.DeleteModel(name='Model',),
        migrations.DeleteModel(name='ModelChangelog',),
        migrations.DeleteModel(name='ModelModification',),
        migrations.DeleteModel(name='ModelObject',),
        migrations.DeleteModel(name='Request',),
        migrations.AddField(
            model_name='unspecifiedevent',
            name='application',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='automated_logging.Application',
            ),
        ),
        migrations.AddField(
            model_name='requestevent',
            name='application',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='automated_logging.Application',
            ),
        ),
        migrations.AddField(
            model_name='requestevent',
            name='request',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='request_context',
                to='automated_logging.RequestContext',
            ),
        ),
        migrations.AddField(
            model_name='requestevent',
            name='response',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='response_context',
                to='automated_logging.RequestContext',
            ),
        ),
        migrations.AddField(
            model_name='requestevent',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='modelmirror',
            name='application',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='automated_logging.Application',
            ),
        ),
        migrations.AddField(
            model_name='modelfield',
            name='model',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='automated_logging.ModelMirror',
            ),
        ),
        migrations.AddField(
            model_name='modelentry',
            name='model',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='automated_logging.ModelMirror',
            ),
        ),
    ]
